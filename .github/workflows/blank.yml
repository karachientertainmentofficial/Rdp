name: Advanced Windows RDP

on: workflow_dispatch

jobs:
  build:
    runs-on: windows-latest
    strategy:
      fail-fast: false

    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2

    - name: Install Chocolatey and Dependencies
      run: |
        choco source add -n=chocolatey -s=https://chocolatey.org/api/v2/
        choco install ngrok

    - name: Configure RDP
      run: |
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0
        Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
        Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -name "UserAuthentication" -Value 1
        $Password = ConvertTo-SecureString "hyd12345" -AsPlainText -Force
        New-LocalUser "admin" -Password $Password -PasswordNeverExpires -UserMayNotChangePassword -AccountNeverExpires
        Add-LocalGroupMember -Group "Remote Desktop Users" -Member "admin"

    - name: Create Ngrok Log File
      run: |
        New-Item -Path .\ngrok.log -Type File

    - name: Start Ngrok Tunnel
      run: |
        ngrok authtoken ${{ secrets.NGROK_AUTHTOKEN }}
        ngrok tcp 3389 --region us -log=stdout > ngrok.log &
        if ($LASTEXITCODE -ne 0) { exit $LASTEXITCODE }

    - name: Fetch Ngrok Tunnel Info
      id: ngrok_info
      run: |
        Start-Sleep 10
        $log_content = Get-Content ngrok.log
        $url = $log_content | Select-String -Pattern 'tcp://(.+?)"' | ForEach-Object { $_.Matches.Groups[1].Value }
        echo "::set-env name=NGROK_URL::$url"
        if (-not $url) { exit 1 }

    - name: Post RDP Info to Issue
      uses: peter-evans/create-or-update-comment@v1
      with:
        issue-number: ${{ github.event.inputs.issue_number }}
        body: |
          ðŸš€ RDP Session is ready!
          - Address: ${{ env.NGROK_URL }}
          - Username: `admin`
          - Password: `hyd12345`
